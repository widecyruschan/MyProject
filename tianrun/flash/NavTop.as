package  {	import flash.display.*;	import flash.events.*;	import fl.transitions.easing.*;	import flash.external.*;	import caurina.transitions.Tweener;	import fl.motion.MotionEvent;	import flash.net.*;	import memorphic.xpath.*;	import flash.events.TimerEvent; 	import flash.utils.Timer; 	public class NavTop  extends MovieClip{		private var  topMenu:MovieClip=new MovieClip();		private var  leftBg:MovieClip=new MovieClip();				private var Menuload = new Loader();		private var defImages:Number = 0;		private var MCArray     :Array=[];		private var AdvXML:XML = new XML();		private var siteURL:String = "";		private var dataURL:String = siteURL + "/xmlshow.php?id=13&tt="+100*Math.random();		private var dataLoader:URLLoader = new URLLoader();		private var myTimer:Timer;			public function NavTop() {			loadData();			stop();		}		private function MenuComplete(e:Event):void{			onStageResize();		}		public function AddAdv():void{										var xl:XMLList = XPathQuery.execQuery(AdvXML,"/Adimages/picture");			for (var i:int = 0 ; i < xl.length(); i++){				var x = xl[i];				var pictureURL:String = XPathQuery.execQuery(x,"pictureURL");				var mc:MovieClip = new MovieClip();				mc.buttonMode = true;				MCArray[i]=mc;				MCArray[i].i = i;				MCArray[i].y=120;				MCArray[i].x=(stage.stageWidth-1000)/2				MCArray[i].alpha = 0;				var mcs = new Loader();				mcs.load(new URLRequest(siteURL +"/"+ pictureURL));				mcs.contentLoaderInfo.addEventListener(Event.COMPLETE, loadPicComplete);				MCArray[i].addChild(mcs);				//addChild(MCArray[i]);			}								leftBg.addChild(new leftMenuBg())				addChild(leftBg)			leftBg.x=(stage.stageWidth-1000)/2+30;			leftBg.y=365;		var Menuok:URLRequest = new URLRequest( siteURL +"/flash/topMenu.swf?tt="+100*Math.random());			Menuload.load(Menuok);			Menuload.contentLoaderInfo.addEventListener(Event.COMPLETE, MenuComplete);			topMenu.addChild(Menuload);			addChild(topMenu)		myTimer=new Timer(6000,100);		myTimer.addEventListener("timer", timerhandler);//注意，事件timer必须全部小写		myTimer.start();		}				function timerhandler(event:TimerEvent):void{			var xl:XMLList = XPathQuery.execQuery(AdvXML,"/Adimages/picture");			for (var i:int = 0 ; i < xl.length(); i++){				if(i!=defImages){				MCArray[i].alpha=0				}									}			Tweener.addTween(MCArray[defImages], {alpha:1,delay  :.2,time:2,transition:"easeInOutExpo"});			if(defImages<xl.length()-1){			defImages++;			}else{			defImages=0;			}		}				function loadPicComplete(evt:Event) {			var b:Bitmap = evt.currentTarget.content;			b.x = 0;			b.y = 0;		}		private function loadData() {			var ur:URLRequest = new URLRequest(dataURL);			dataLoader.addEventListener(Event.COMPLETE, loadDataComplete);			dataLoader.load(ur);		}		private function loadDataComplete(e:Event) {			AdvXML = new XML(e.target.data);			AddAdv();		}				private function slideMotion(pMC:MovieClip, pX:int, pY:int):void		{			Tweener.addTween(pMC, {x  :pX,y  :pY, transition:"easeInOutExpo"});		}		private function slideResize(pMC:MovieClip, sizeX:int, sizeY:int):void		{			Tweener.addTween(pMC, {width  :sizeX,height  :sizeY,transition:"easeInOutExpo"});		}		private function onStageResize(e:Event = null):void		{			var sw:Number ;			var sh:Number ;			stage.stageWidth < 1000 ? sw = 1000:sw = stage.stageWidth;			stage.stageHeight<650 ? sh = 650:sh = stage.stageHeight;			//slideResize(bgMc,sw,sh);			//slideMotion(bgMc,sw/2,sh/2);			slideMotion(topMenu,(sw-1000)/2,0);			slideMotion(leftBg,(sw-1000)/2+30,365);					}	}	}