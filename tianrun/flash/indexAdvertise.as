package {		import flash.display.*;		import flash.events.*;		import fl.transitions.easing.*;		import flash.external.*;		import caurina.transitions.Tweener;		import fl.motion.MotionEvent;		import flash.net.*;		import memorphic.xpath.*;		import org.papervision3d.objects.primitives.*;		import org.papervision3d.materials.*;		import org.papervision3d.events.*;		import org.papervision3d.view.BasicView;		import milkmidi.papervision3d.materials.ReflectionFileMaterial;			public class indexAdvertise  extends MovieClip	{		private var MCArray     :Array=[];		private var AdvXML:XML = new XML();		private var siteURL:String = "";		//private var siteURL:String = "http://localhost";		private var dataURL:String = siteURL + "/xmlshow.php?id=11";		private var dataLoader:URLLoader = new URLLoader();		private var view			:BasicView;		private var loadedNumber	:int = 0;  //已載入的圖片數量。		private var itemOfNumber	:int = 5; //物件數量。		private var currentPlaneIndex:Number = 2;//目前圖片的索引值。		private var planeAngle		:Number = 35;   //角度。		private var planeSeparation	:Number = 110;  //左右二邊Plane與Plane的間距。		private var planeOffset		:Number = 130;  //目前所選擇的Plane其左右的間距。		private var selectPlaneY	:Number = -60;  //目前所選擇Plane的y值。		private var selectPlaneZ	:Number = -100;	//目前所選擇Plane的z值。		private var isRender		:Boolean = false;		public function indexAdvertise()		{			init3DEngine()			loadData();								}				public function AddAdv():void{										var xl:XMLList = XPathQuery.execQuery(AdvXML,"/Adimages/picture");			for (var i:int = 0 ; i < xl.length(); i++){				var x = xl[i];				var pictureURL:String = XPathQuery.execQuery(x,"pictureURL");				var refMat:ReflectionFileMaterial = new ReflectionFileMaterial( siteURL +"/"+pictureURL, true);				refMat.addEventListener(FileLoadEvent.LOAD_COMPLETE, onFileLoaderComplete);				refMat.interactive = true;				//addChild(mc);				//偵聽refMat發出的FileLoadEvent.LOAD_COMPLETE事件。				refMat.interactive = true;				//互動模式開啟。				var plane:Plane  = new Plane( refMat, 189, 704,6,8);				plane.name = "item" + i;				plane.extra = { id:i };				//為每個plane設定一個唯一的id值。				plane.z = i * -20;				//讓z軸遞減。				plane.addEventListener(InteractiveScene3DEvent.OBJECT_CLICK, on3DClick);				//偵聽InteractiveScene3DEvent.OBJECT_CLICK事件。				view.scene.addChild(plane);												/*Left_Btn.addEventListener(MouseEvent.CLICK,LeftCLICK);				Right_Btn.addEventListener(MouseEvent.CLICK,Mouse_CLICK);*/							}			var Left_Btn:LeftBtn=new LeftBtn();				view.addChild(Left_Btn)				Left_Btn.x=stage.stageWidth/2-420;				Left_Btn.y=stage.stageHeight/2-80				var Right_Btn:RightBtn=new RightBtn();				view.addChild(Right_Btn)				Right_Btn.x=stage.stageWidth/2+420;				Right_Btn.y=stage.stageHeight/2-80				Left_Btn.buttonMode=Right_Btn.buttonMode=true;				Left_Btn.addEventListener(MouseEvent.MOUSE_OVER,Mouse_Over);				Right_Btn.addEventListener(MouseEvent.MOUSE_OVER,Mouse_Over);								Left_Btn.addEventListener(MouseEvent.MOUSE_OUT,Mouse_Out);				Right_Btn.addEventListener(MouseEvent.MOUSE_OUT,Mouse_Out);				Left_Btn.addEventListener(MouseEvent.CLICK,LeftClick);				Right_Btn.addEventListener(MouseEvent.CLICK,RightClick);				}		private function Mouse_Over(e:MouseEvent){			var mc=MovieClip(e.currentTarget);			mc.gotoAndStop(2);		}		private function Mouse_Out(e:MouseEvent){			var mc=MovieClip(e.currentTarget);			mc.gotoAndStop(1);		}		private function RightClick(e:MouseEvent){			moveRight();		}		private function LeftClick(e:MouseEvent){			moveLeft();		}		private function loadData() {			var ur:URLRequest = new URLRequest(dataURL);			dataLoader.addEventListener(Event.COMPLETE, loadDataComplete);			dataLoader.load(ur);		}		private function loadDataComplete(e:Event) {			AdvXML = new XML(e.target.data);			AddAdv();		}				private function init3DEngine():void{			view = new BasicView(0, 0, true, true, "Target");			view.camera.z = -440; 			view.viewport.buttonMode = true;						this.addChild(view);			this.addEventListener(Event.ENTER_FRAME, onEventRender3D);		}		private function onFileLoaderComplete(e:FileLoadEvent):void {			loadedNumber++;			if (loadedNumber >= itemOfNumber) {				//如果已經載入的圖片數量大於總圖片數量				shiftToItem(2);				//執行shiftToItem函式。			}		}		public function shiftToItem(p_id:int):void {			isRender = true;			currentPlaneIndex = p_id;			//將目標編號寫入currentPlaneIndex變數。			stage.quality = StageQuality.MEDIUM;			//把整體的品質設成中等,漸少效能的運算。			var _tweenObj:Object;			//用for回圈,一次更改所有plane的屬性。			for (var i:int = 0; i < itemOfNumber; i++){				var plane:Plane = view.scene.getChildByName("item" + i) as Plane;				//Scene類別下的getChildByName方法, 可以得到其子系物件,型別為DisplayObject3D。				//型別不同，所以要轉換。				var dis	:int = i - p_id;				//算出目前回圈值與目標編號值的差。								if (i == p_id) {					//如果目前回圈值等於目標編號值					//表示目前所算算的plane為正中間顯示。					//plane.Width=189;					_tweenObj =					{						x			:0,						y			:selectPlaneY,						z			:selectPlaneZ,						rotationY	:0,						onComplete	:function ():void {							stage.quality = StageQuality.HIGH;							isRender = false;							//當Tweener完成時,再把品質調成高。						}					};					//把值寫入到_tweenObj物件裡。				} else if (i < p_id) {					//如果回圈值小於目標編號值					//表示該plane在左邊。					_tweenObj =					{						x			:dis * planeSeparation - planeOffset,						//x軸位置等於：距離差乘上間距,再多減去planeOffset變數。						y			:-40,						z			:0,						rotationY	: -planeAngle					};									} else  {					//plane在右邊。					_tweenObj =					{						x			:dis * planeSeparation  + planeOffset,						//x軸位置等於：距離差乘上間距,再多加planeOffset變數。						y			:-40,						z			:0,						rotationY	:planeAngle					};				}				_tweenObj.time = 0.8;				Tweener.addTween(plane, _tweenObj);				//使用Tweener移動物件。			}		}		private function on3DClick(e:InteractiveScene3DEvent){			var _id:int = e.displayObject3D.extra.id;			//InteractiveScene3DEvent類別下有個displayObject3D屬性			//可以得到廣播者,型別為DisplayObject3D			//再透過extra屬性裡的id屬性,即可得到一開始我們為每個Plane設定的唯一id值。			shiftToItem(_id);			//把該值傳進shiftToItem函式執行。		}		/*private function onEventMouseWheel(e:MouseEvent):void {			//MouseEvent類別下, delta屬性可以得到滑鼠滾輪的值			//e.dalta如果大於0,表示滾輪向上,小於0表示向下。					if (e.delta < 0)  {				moveRight();			}else {				moveLeft();			}		}*/		public function moveLeft():void	{			if (currentPlaneIndex > 0) {				//如果目前plane的索引值大於0的話				shiftToItem(currentPlaneIndex - 1);			}else{				shiftToItem(itemOfNumber -1)			}		}		public function moveRight():void{			if (currentPlaneIndex < itemOfNumber -1) {				//如果目前plane的索引值小於總數量扣一				shiftToItem(currentPlaneIndex + 1);			}else{				shiftToItem(0);			}		}        private function onEventRender3D(e:Event):void {			if (isRender) {				view.singleRender();			}			        }	}}